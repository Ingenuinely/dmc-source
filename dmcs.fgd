//-------------------------------------------------------------------------
//
// Game data for Deathmach Classic Source.
//
//-------------------------------------------------------------------------

@include "halflife2.fgd"


@PointClass base(PlayerClass, Angles) studio("models/editor/playerstart.mdl") = info_player_deathmatch :
	"This entity indicates the position and facing direction at which the player will spawn during a deathmatch map. Any number of "+
	"info_player_deathmatch entities may be placed in a map."
[
]

@PointClass base(prop_physics) studioprop() sphere(fademindist) sphere(fademaxdist) = prop_physics_respawnable :
	"This class is the same as prop_physics, except it respawns after it breaks"
[
	RespawnTime(float) : "Respawn Time" : 60 : "Ammount in seconds this prop will respawn after it breaks."
]

@SolidClass base(BasePlat) = func_plat :
	"A brush entity that moves vertically, and can rotate while doing so."
[
	spawnflags(flags) =
	[
		1: "Toggle" : 1
	]
	noise1(sound) : "Movement Sound" : : "The sound to play when the brush moves."
	noise2(sound) : "Stop Sound" : : "The sound to play when the brush stops moving."
	speed(float) : "Speed" : "50.000000" : "Speed at which the brush moves"
	lip(float) : "Lip" : "0.000000" :	"The amount, in inches, of the button to leave " +
						"sticking out of the wall it recedes into when " +
						"pressed. Negative values make the button recede " +
						"even further into the wall."
]

@SolidClass base(Targetname, Origin, RenderFields) = func_train
[
	spawnflags(flags) =
	[
		8 : "Non-solid" : 0
	]
	texframeindex(integer) : "Initial Brush Frame Index" : : "Use this to set the initial frame of materials with multiple frames in the brush"
	target(target_destination) : "First path_corner"
	noise1(sound) : "Movement Sound" : : "The sound to play when the train moves."
	noise2(sound) : "Stop Sound" : : "The sound to play when the train stops moving."
	speed(float) : "Speed" : "50.000000" : "Speed at which the brush moves."
	volume(float) : "Sound volume [0.0, 10.0]" : "0.000000"
	dmg(float) : "Crush Damage" : "0.000000"
	input Toggle(void) : "Toggle movement"
	input Start(void) : "Start movement"
	input Stop(void) : "Stop movement"
	input Use(void) : "Toggle movement - has a different functionality than Toggle"
]

//
// Items
//

@PointClass base(Item) studio("models/items/battery.mdl") = item_cells : "Thunderbolt ammo" []
@PointClass base(Item) studio("models/weapons/w_missile_closed.mdl") = item_rockets : "Rockets" []
@PointClass base(Item) studio("models/items/BoxBuckshot.mdl") = item_shells : "Shells" []
@PointClass base(Item) studio("models/items/BoxMRounds.mdl") = item_spikes : "Nailgun ammo" []

@PointClass base(Item) studio("models/items/healthkit.mdl") = item_health : "Health pak"
[
	spawnflags(flags) =
	[
		1 : "Rotten" : 0
		2 : "Megahealth" : 0
	]
]

@PointClass base(Item) studio("models/items/hevsuit.mdl") = item_artifact_envirosuit : "Environmental protection suit" []
@PointClass base(Item) studio("models/items/battery.mdl") = item_artifact_super_damage : "Quad damage" []
@PointClass base(Item) studio("models/items/battery.mdl") = item_artifact_invulnerability : "Pentagram of Protection" []
@PointClass base(Item) studio("models/items/battery.mdl") = item_artifact_invisibility : "Ring of Shadows" []

@PointClass base(Item)  studio("models/items/hevsuit.mdl") = item_armorUltra : "500% armor (Blue)" []
@PointClass base(Item)  studio("models/items/hevsuit.mdl") = item_armorInv : "200% armor (Red)" []
@PointClass base(Item)  studio("models/items/hevsuit.mdl") = item_armor2 : "150% armor (Yellow)" []
@PointClass base(Item)  studio("models/items/hevsuit.mdl") = item_armor1 : "100% armor (Green)" []


//
// weapons
//

@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl") = weapon_crowbar : "Crowbar" []
@PointClass base(Weapon) studio("models/weapons/w_rocket_launcher.mdl") = weapon_rocketlauncher : "Rocket Launcher" []
@PointClass base(Weapon) studio("models/weapons/w_shotgun.mdl") = weapon_shotgun : "Shotgun" []
@PointClass base(Weapon) studio("models/weapons/w_shotgun.mdl") = weapon_supershotgun : "Super Shotgun" []
@PointClass base(Weapon) studio("models/weapons/w_nail.mdl") = weapon_nailgun : "Nailgun" []
@PointClass base(Weapon) studio("models/weapons/w_nail2.mdl") = weapon_supernailgun : "Super Nailgun " []
@PointClass base(Weapon) studio("models/weapons/w_rock.mdl") = weapon_grenadelauncher : "Grenade launcher" []
@PointClass base(Weapon) studio("models/weapons/w_light.mdl") = weapon_lightning : "Thunderbolt" []